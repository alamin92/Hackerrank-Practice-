#include <bits/stdc++.h>

using namespace std;

vector<string> split_string(string);

// Complete the checkMagazine function below.
void checkMagazine(vector<string> magazine, vector<string> note) {
   
     int x = magazine.size();
     int y = note.size();

    unordered_map<string, int> m;/* Created a map for each of the words which is for the string, then int is for the frequency, like how many times that word occur.  lets say u have "ive got a lovely". each word will save and with the value 1++. word will be the key and value is the number assigned to  */

    /* Now itearte through the magazine and insert them into the "m" map that you ccrteated */

//  for(unordered_map<string, int>::iterator itr=magazine.begin(); itr!=magazine.end(); ++itr){
//      //cout<<m[itr]<<endl;
//      m[itr]++;

// or this is the shortcut way. 

//  for(auto i:magazine){
//      m[i]++;
//  }

for(int i=0; i<x; i++){
    /* m[i]++; mistake was here, u need to have the key and value both to iterate through the map or assign to another map. */
    m[magazine[i]]++;
}
 
/*.Now check the note and comapre with the "m" map u created. if it is bigger than 0 means that the value of the key is there means the word exists. if it is not that menans the word in the note does not exist in the magazine.  */
// / for(unordered_map<string, int>::iterator itr=note.begin(); itr!=note.end(); ++itr){
    //  for (auto i : note){
    for(int i=0; i<y; i++){
        if(m[note[i]]>0){
            m[note[i]]--;
        }
    // if(m[itr]>0){
    //     m[itr]--;
    // }
    else{
        cout<<"No"<<endl;
        return;
    }
 }
   cout<<"Yes"<<endl;
   return; 

}

int main()
{
    string mn_temp;
    getline(cin, mn_temp);

    vector<string> mn = split_string(mn_temp);

    int m = stoi(mn[0]);

    int n = stoi(mn[1]);

    string magazine_temp_temp;
    getline(cin, magazine_temp_temp);

    vector<string> magazine_temp = split_string(magazine_temp_temp);

    vector<string> magazine(m);

    for (int i = 0; i < m; i++) {
        string magazine_item = magazine_temp[i];

        magazine[i] = magazine_item;
    }

    string note_temp_temp;
    getline(cin, note_temp_temp);

    vector<string> note_temp = split_string(note_temp_temp);

    vector<string> note(n);

    for (int i = 0; i < n; i++) {
        string note_item = note_temp[i];

        note[i] = note_item;
    }

    checkMagazine(magazine, note);

    return 0;
}

vector<string> split_string(string input_string) {
    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char &x, const char &y) {
        return x == y and x == ' ';
    });

    input_string.erase(new_end, input_string.end());

    while (input_string[input_string.length() - 1] == ' ') {
        input_string.pop_back();
    }

    vector<string> splits;
    char delimiter = ' ';

    size_t i = 0;
    size_t pos = input_string.find(delimiter);

    while (pos != string::npos) {
        splits.push_back(input_string.substr(i, pos - i));

        i = pos + 1;
        pos = input_string.find(delimiter, i);
    }

    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));

    return splits;
}








Referrence-> https://www.youtube.com/watch?v=lBFmdkEZiMQ&t=3473s
